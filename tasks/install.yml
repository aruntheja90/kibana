---

- name: Install apt packages for SNI fix
  become: yes
  apt:
    name:
      - python-pip
      - python-dev
      - libffi-dev
      - libssl-dev
  when:
    - ansible_python_version is version_compare('2.7.9', '<')
    - sansible_kibana_install_sni_fixes == true

- name: Upgrade Pip for SNI fix
  become: yes
  pip:
    name: pip>=18
  when:
    - ansible_python_version is version_compare('2.7.9', '<')
    - sansible_kibana_install_sni_fixes == true

- name: Install Python packages for SNI fix
  become: yes
  pip:
    name:
      - pyopenssl>=18.0.0
      - ndg-httpsclient>=0.5.1
      - pyasn1>=0.4.5
  when:
    - ansible_python_version is version_compare('2.7.9', '<')
    - sansible_kibana_install_sni_fixes == true

- name: Download and Extract Kibana Tarball
  become: yes
  unarchive:
    remote_src: yes
    src: "{{ sansible_kibana_download_base_url }}{{ sansible_kibana_tarball }}.tar.gz"
    dest: /usr/share/
    creates: "/usr/share/{{ sansible_kibana_tarball }}"

- name: Link Kibana Directory
  become: yes
  file:
    src: "/usr/share/{{ sansible_kibana_tarball }}"
    dest: "{{ sansible_kibana_install_dir }}"
    state: link

- name: Install Kibana Plugins
  become: yes
  command: "{{ sansible_kibana_install_dir }}/bin/kibana plugin --install {{ item.plugin_name }}"
  args:
    chdir: "{{ sansible_kibana_install_dir }}"
    creates: "{{ sansible_kibana_install_dir }}/installedPlugins/{{ item.plugin_dir }}"
  environment:
    JAVA_HOME: /usr/share/java
  with_items: "{{ sansible_kibana_plugins }}"

- name: Install Kibana Service
  become: yes
  template:
    src: kibana_sysv.j2
    dest: /etc/init.d/kibana
    mode: 0755
  notify:
    - start kibana

- name: Enable Kibana Service
  become: yes
  service:
    name: kibana
    enabled: yes
  notify:
    - start kibana
